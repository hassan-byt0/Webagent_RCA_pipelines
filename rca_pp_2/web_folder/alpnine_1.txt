<!DOCTYPE html>
<!-- saved from url=(0088)https://bulia-keshav.github.io/Element-variation-websites/Dropdown/alpine-non-hover.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SimpleZon - Shop Online</title>
    <!-- Include Alpine.js CDN -->
    <script defer="" src="./alpnine_1_files/cdn.min.js"></script>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: Arial, sans-serif; background: #f5f5f5; }
        
        .header { background: #232f3e; color: white; padding: 10px 20px; display: flex; justify-content: space-between; align-items: center; }
        .logo { font-size: 24px; font-weight: bold; }
        .nav { display: flex; gap: 20px; }
        .nav a { color: white; text-decoration: none; padding: 8px 12px; border-radius: 4px; }
        .nav a:hover, .nav a.active { background: #37475a; }
        .cart-count { background: #ff9900; color: black; border-radius: 50%; padding: 2px 6px; font-size: 12px; margin-left: 5px; }
        
        .container { max-width: 1200px; margin: 20px auto; padding: 0 20px; }
        
        /* Multilevel Dropdown Styles */
        .dropdown-container { position: relative; display: inline-block; margin: 20px 0; }
        .dropdown-trigger { 
            background: #232f3e; 
            color: white; 
            padding: 12px 20px; 
            border: none; 
            border-radius: 4px; 
            cursor: pointer; 
            font-size: 16px;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .dropdown-trigger:hover { background: #37475a; }
        .dropdown-arrow { transition: transform 0.3s; }
        .dropdown-container.open .dropdown-arrow { transform: rotate(180deg); }
        
        .dropdown-menu {
            position: absolute;
            top: 100%;
            left: 0;
            background: white;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            min-width: 200px;
            z-index: 1000;
        }
        [x-show="isOpen"] .dropdown-menu { display: block; }
        
        .dropdown-item {
            padding: 12px 16px;
            cursor: pointer;
            border-bottom: 1px solid #f0f0f0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: relative;
        }
        .dropdown-item:last-child { border-bottom: none; }
        .dropdown-item:hover { background: #f8f9fa; }
        .dropdown-item.has-submenu::after { content: "►"; color: #666; }
        
        .dropdown-submenu {
            position: absolute;
            left: 100%;
            top: 0;
            background: white;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            min-width: 180px;
        }
        
        .dropdown-submenu-l3 {
            position: absolute;
            left: 100%;
            top: 0;
            background: white;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            min-width: 160px;
        }
        
        /* Products Grid */
        .products-section h2 { margin: 30px 0 20px 0; color: #232f3e; }
        .products-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: 20px; margin-top: 20px; }
        .product { background: white; border-radius: 8px; padding: 20px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); transition: transform 0.2s; }
        .product:hover { transform: translateY(-2px); }
        .product h3 { color: #232f3e; margin-bottom: 10px; }
        .product-info { margin: 10px 0; }
        .category-tag { background: #e8f4f8; color: #007185; padding: 2px 8px; border-radius: 12px; font-size: 12px; margin-bottom: 8px; display: inline-block; }
        .price { font-size: 18px; font-weight: bold; color: #b12704; }
        .rating { color: #ff9900; margin: 5px 0; }
        .add-btn { background: #ff9900; color: black; border: none; padding: 10px 20px; border-radius: 4px; cursor: pointer; font-weight: bold; transition: background 0.3s; position: relative; z-index: 10; }
        .add-btn:hover { background: #e68900; }
        
        .cart-page { display: none; }
        .cart-item { background: white; padding: 15px; margin: 10px 0; border-radius: 8px; display: flex; justify-content: space-between; align-items: center; }
        .cart-summary { background: white; padding: 20px; border-radius: 8px; margin-top: 20px; }
        .checkout-btn { background: #ff9900; color: black; border: none; padding: 15px 30px; border-radius: 4px; cursor: pointer; font-weight: bold; width: 100%; }
        .empty-cart { text-align: center; padding: 50px; color: #666; }
        
        .success-page { display: none; }
        .success-container { text-align: center; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }
        .success-icon { font-size: 60px; color: #28a745; margin-bottom: 20px; }
        .success-title { font-size: 32px; color: #232f3e; margin-bottom: 10px; }
        .success-subtitle { color: #666; margin-bottom: 30px; }
        .order-summary { background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0; text-align: left; }
        .order-item { display: flex; justify-content: space-between; margin: 10px 0; padding: 5px 0; }
        .order-item:not(:last-child) { border-bottom: 1px solid #dee2e6; }
        .continue-btn { background: #232f3e; color: white; border: none; padding: 15px 30px; border-radius: 4px; cursor: pointer; font-weight: bold; margin-top: 20px; }
        .continue-btn:hover { background: #37475a; }

        .hidden { display: none !important; }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">SimpleZon</div>
        <div class="nav">
            <a href="https://bulia-keshav.github.io/Element-variation-websites/Dropdown/alpine-non-hover.html#" onclick="showProducts()" class="active" id="products-tab">Products</a>
            <a href="https://bulia-keshav.github.io/Element-variation-websites/Dropdown/alpine-non-hover.html#" onclick="showCart()" id="cart-tab">Cart <span class="cart-count" id="cart-count">0</span></a>
        </div>
    </div>

    <div class="container">
        <!-- Products Page -->
        <div id="products-page">
            <h1>Shop Our Products</h1>
            
            <!-- Alpine.js Multilevel Dropdown Filter -->
            <div id="dropdown-container" class="dropdown-container" x-data="dropdown">
                <button class="dropdown-trigger" x-on:click="toggleDropdown()" :aria-expanded="isOpen" aria-label="Filter products by category" role="button" x-bind:class="{ &#39;open&#39;: isOpen }" aria-expanded="false">
                    <span x-text="selectedText || &#39;All Products&#39;">All Products</span>
                    <span class="dropdown-arrow" :class="{ &#39;rotate-180&#39;: isOpen }">▼</span>
                </button>
                <ul class="dropdown-menu" x-show="isOpen" role="menu" x-on:click.outside="closeDropdown()" style="display: none;">
                    <template x-for="item in menu" :key="item.label"></template><li class="dropdown-item has-submenu" @click="toggleSubmenu(item.label)" role="menuitem" :aria-expanded="activeSubmenu === item.label" aria-expanded="false">
                            <span x-text="item.label">Men</span>
                            <ul class="dropdown-submenu" x-show="activeSubmenu === item.label" role="menu" style="display: none;">
                                <template x-for="subitem in item.children" :key="subitem.label"></template><li class="dropdown-item has-submenu" :class="{ &#39;has-submenu&#39;: subitem.children &amp;&amp; subitem.children.length &gt; 0 }" @click="toggleSubmenuL3(subitem.label, $event)" role="menuitem" :aria-expanded="activeSubmenuL3 === subitem.label" aria-expanded="false">
                                        <span x-text="subitem.label">Shoes</span>
                                        <ul class="dropdown-submenu-l3" x-show="activeSubmenuL3 === subitem.label" role="menu" style="display: none;">
                                            <template x-for="brand in subitem.children" :key="brand.label"></template><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">Nike</span>
                                                </li><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">Adidas</span>
                                                </li>
                                        </ul>
                                    </li><li class="dropdown-item has-submenu" :class="{ &#39;has-submenu&#39;: subitem.children &amp;&amp; subitem.children.length &gt; 0 }" @click="toggleSubmenuL3(subitem.label, $event)" role="menuitem" :aria-expanded="activeSubmenuL3 === subitem.label" aria-expanded="false">
                                        <span x-text="subitem.label">Clothing</span>
                                        <ul class="dropdown-submenu-l3" x-show="activeSubmenuL3 === subitem.label" role="menu" style="display: none;">
                                            <template x-for="brand in subitem.children" :key="brand.label"></template><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">T-Shirts</span>
                                                </li><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">Jeans</span>
                                                </li>
                                        </ul>
                                    </li>
                            </ul>
                        </li><li class="dropdown-item has-submenu" @click="toggleSubmenu(item.label)" role="menuitem" :aria-expanded="activeSubmenu === item.label" aria-expanded="false">
                            <span x-text="item.label">Women</span>
                            <ul class="dropdown-submenu" x-show="activeSubmenu === item.label" role="menu" style="display: none;">
                                <template x-for="subitem in item.children" :key="subitem.label"></template><li class="dropdown-item has-submenu" :class="{ &#39;has-submenu&#39;: subitem.children &amp;&amp; subitem.children.length &gt; 0 }" @click="toggleSubmenuL3(subitem.label, $event)" role="menuitem" :aria-expanded="activeSubmenuL3 === subitem.label" aria-expanded="false">
                                        <span x-text="subitem.label">Shoes</span>
                                        <ul class="dropdown-submenu-l3" x-show="activeSubmenuL3 === subitem.label" role="menu" style="display: none;">
                                            <template x-for="brand in subitem.children" :key="brand.label"></template><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">Nike</span>
                                                </li><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">Adidas</span>
                                                </li>
                                        </ul>
                                    </li><li class="dropdown-item has-submenu" :class="{ &#39;has-submenu&#39;: subitem.children &amp;&amp; subitem.children.length &gt; 0 }" @click="toggleSubmenuL3(subitem.label, $event)" role="menuitem" :aria-expanded="activeSubmenuL3 === subitem.label" aria-expanded="false">
                                        <span x-text="subitem.label">Electronics</span>
                                        <ul class="dropdown-submenu-l3" x-show="activeSubmenuL3 === subitem.label" role="menu" style="display: none;">
                                            <template x-for="brand in subitem.children" :key="brand.label"></template><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">Headphones</span>
                                                </li><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">Smartwatch</span>
                                                </li>
                                        </ul>
                                    </li>
                            </ul>
                        </li><li class="dropdown-item has-submenu" @click="toggleSubmenu(item.label)" role="menuitem" :aria-expanded="activeSubmenu === item.label" aria-expanded="false">
                            <span x-text="item.label">Home</span>
                            <ul class="dropdown-submenu" x-show="activeSubmenu === item.label" role="menu" style="display: none;">
                                <template x-for="subitem in item.children" :key="subitem.label"></template><li class="dropdown-item has-submenu" :class="{ &#39;has-submenu&#39;: subitem.children &amp;&amp; subitem.children.length &gt; 0 }" @click="toggleSubmenuL3(subitem.label, $event)" role="menuitem" :aria-expanded="activeSubmenuL3 === subitem.label" aria-expanded="false">
                                        <span x-text="subitem.label">Plants</span>
                                        <ul class="dropdown-submenu-l3" x-show="activeSubmenuL3 === subitem.label" role="menu" style="display: none;">
                                            <template x-for="brand in subitem.children" :key="brand.label"></template><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">Plants</span>
                                                </li>
                                        </ul>
                                    </li><li class="dropdown-item has-submenu" :class="{ &#39;has-submenu&#39;: subitem.children &amp;&amp; subitem.children.length &gt; 0 }" @click="toggleSubmenuL3(subitem.label, $event)" role="menuitem" :aria-expanded="activeSubmenuL3 === subitem.label" aria-expanded="false">
                                        <span x-text="subitem.label">Candles</span>
                                        <ul class="dropdown-submenu-l3" x-show="activeSubmenuL3 === subitem.label" role="menu" style="display: none;">
                                            <template x-for="brand in subitem.children" :key="brand.label"></template><li class="dropdown-item" x-on:click="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)" role="menuitem" tabindex="0" @keydown.enter="selectItem(item.label, subitem.label, brand.value, `${item.label} &gt; ${subitem.label} &gt; ${brand.label}`, $event)">
                                                    <span x-text="brand.label">Candles</span>
                                                </li>
                                        </ul>
                                    </li>
                            </ul>
                        </li>
                </ul>
            </div>

            <!-- Featured Products Section -->
            <div class="products-section">
                <h2 id="products-title">Featured Products</h2>
                <div class="products-grid" id="products-grid">
                    <div class="product">
                        <div class="category-tag">Electronics</div>
                        <h3>Wireless Headphones</h3>
                        <div class="product-info">
                            <div>Bluetooth noise-canceling headphones</div>
                            <div class="price">$89</div>
                            <div class="rating">★★★★☆ 4.2</div>
                        </div>
                        <button class="add-btn" onclick="addToCart(&#39;headphones&#39;)">Add to Cart</button>
                    </div>
                
                    <div class="product">
                        <div class="category-tag">Electronics</div>
                        <h3>Smart Fitness Watch</h3>
                        <div class="product-info">
                            <div>Track your fitness and health metrics</div>
                            <div class="price">$199</div>
                            <div class="rating">★★★★☆ 4.4</div>
                        </div>
                        <button class="add-btn" onclick="addToCart(&#39;smartwatch&#39;)">Add to Cart</button>
                    </div>
                
                    <div class="product">
                        <div class="category-tag">Clothing</div>
                        <h3>Cotton T-Shirt</h3>
                        <div class="product-info">
                            <div>Comfortable 100% cotton t-shirt</div>
                            <div class="price">$25</div>
                            <div class="rating">★★★★☆ 4.0</div>
                        </div>
                        <button class="add-btn" onclick="addToCart(&#39;tshirt&#39;)">Add to Cart</button>
                    </div>
                
                    <div class="product">
                        <div class="category-tag">Home</div>
                        <h3>Indoor Plant Set</h3>
                        <div class="product-info">
                            <div>Set of 3 air-purifying plants</div>
                            <div class="price">$45</div>
                            <div class="rating">★★★★☆ 4.5</div>
                        </div>
                        <button class="add-btn" onclick="addToCart(&#39;plant&#39;)">Add to Cart</button>
                    </div>
                
                    <div class="product">
                        <div class="category-tag">Home</div>
                        <h3>Scented Candles Pack</h3>
                        <div class="product-info">
                            <div>Pack of 4 aromatherapy candles</div>
                            <div class="price">$32</div>
                            <div class="rating">★★★★☆ 4.2</div>
                        </div>
                        <button class="add-btn" onclick="addToCart(&#39;candle&#39;)">Add to Cart</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Cart Page -->
        <div id="cart-page" class="cart-page">
            <h1>Shopping Cart</h1>
            <div id="cart-items"></div>
            <div id="cart-summary"></div>
        </div>

        <!-- Success Page -->
        <div id="success-page" class="success-page">
            <div class="success-container">
                <div class="success-icon">✅</div>
                <h1 class="success-title">Congratulations!</h1>
                <p class="success-subtitle">Your order has been placed successfully</p>
                
                <div class="order-summary">
                    <h3 style="margin-bottom: 15px; color: #232f3e;">Order Summary</h3>
                    <div id="order-items"></div>
                    <div class="order-item" style="font-weight: bold; font-size: 18px; color: #b12704;">
                        <span>Total Paid:</span>
                        <span id="total-paid"></span>
                    </div>
                </div>
                
                <button class="continue-btn" onclick="continueShopping()">Continue Shopping</button>
            </div>
        </div>
    </div>

    <script>
        let cart = [];
        let lastOrder = { items: [], total: 0 };
        let currentFilter = 'featured';
        
        const products = {
            headphones: { name: 'Wireless Headphones', price: 89, rating: '4.2', category: 'electronics', description: 'Bluetooth noise-canceling headphones', gender: 'women', subcategory: 'electronics', brand: 'headphones' },
            smartwatch: { name: 'Smart Fitness Watch', price: 199, rating: '4.4', category: 'electronics', description: 'Track your fitness and health metrics', gender: 'women', subcategory: 'electronics', brand: 'smartwatch' },
            tshirt: { name: 'Cotton T-Shirt', price: 25, rating: '4.0', category: 'clothing', description: 'Comfortable 100% cotton t-shirt', gender: 'men', subcategory: 'clothing', brand: 'tshirts' },
            plant: { name: 'Indoor Plant Set', price: 45, rating: '4.5', category: 'home', description: 'Set of 3 air-purifying plants', gender: 'home', subcategory: 'garden', brand: 'plants' },
            candle: { name: 'Scented Candles Pack', price: 32, rating: '4.2', category: 'home', description: 'Pack of 4 aromatherapy candles', gender: 'home', subcategory: 'decor', brand: 'candles' },
            nike_air_max_90: { name: 'Nike Air Max 90', price: 110, rating: '4.6', category: 'shoes', description: 'Classic Air Max with visible air cushioning', gender: 'men', subcategory: 'shoes', brand: 'nike' },
            nike_air_max_pro: { name: 'Nike Air Max Pro', price: 95, rating: '4.5', category: 'shoes', description: 'Professional running shoes with advanced cushioning', gender: 'men', subcategory: 'shoes', brand: 'nike' },
            nike_air_max_270: { name: 'Nike Air Max 270', price: 130, rating: '4.7', category: 'shoes', description: 'Lifestyle shoes with maximum Air unit', gender: 'men', subcategory: 'shoes', brand: 'nike' },
            nike_women_air_max: { name: 'Nike Women Air Max', price: 105, rating: '4.4', category: 'shoes', description: 'Stylish women\'s Air Max sneakers', gender: 'women', subcategory: 'shoes', brand: 'nike' },
            adidas_ultraboost: { name: 'Adidas Ultraboost', price: 180, rating: '4.7', category: 'shoes', description: 'Premium running shoes with boost technology', gender: 'men', subcategory: 'shoes', brand: 'adidas' },
            adidas_women: { name: 'Adidas Women Sneakers', price: 140, rating: '4.3', category: 'shoes', description: 'Comfortable women\'s sneakers', gender: 'women', subcategory: 'shoes', brand: 'adidas' },
            jeans: { name: 'Denim Jeans', price: 65, rating: '4.3', category: 'clothing', description: 'Classic fit blue denim jeans', gender: 'men', subcategory: 'clothing', brand: 'jeans' }
        };

        function renderProducts() {
            const grid = document.getElementById('products-grid');
            const title = document.getElementById('products-title');
            let html = '';
            let filteredProducts = [];
            
            if (currentFilter === 'featured') {
                title.textContent = 'Featured Products';
                filteredProducts = Object.entries(products).filter(([id, product]) => 
                    ['headphones', 'smartwatch', 'tshirt', 'plant', 'candle'].includes(id)
                );
            } else {
                const [gender, subcategory, brand] = currentFilter.split('-');
                title.textContent = `${gender.charAt(0).toUpperCase() + gender.slice(1)} > ${subcategory.charAt(0).toUpperCase() + subcategory.slice(1)} > ${brand.charAt(0).toUpperCase() + brand.slice(1)}`;
                
                filteredProducts = Object.entries(products).filter(([id, product]) => 
                    product.gender === gender && product.subcategory === subcategory && product.brand === brand
                );
            }
            
            filteredProducts.forEach(([id, product]) => {
                html += `
                    <div class="product">
                        <div class="category-tag">${product.category.charAt(0).toUpperCase() + product.category.slice(1)}</div>
                        <h3>${product.name}</h3>
                        <div class="product-info">
                            <div>${product.description}</div>
                            <div class="price">$${product.price}</div>
                            <div class="rating">★★★★☆ ${product.rating}</div>
                        </div>
                        <button class="add-btn" onclick="addToCart('${id}')">Add to Cart</button>
                    </div>
                `;
            });
            
            if (html === '') {
                html = '<div style="text-align: center; padding: 50px; color: #666;">No products found for this selection.</div>';
            }
            
            grid.innerHTML = html;
        }

        function filterProducts(gender, subcategory, brand) {
            console.log('Filtering products:', gender, subcategory, brand); // Debug
            currentFilter = `${gender}-${subcategory}-${brand}`;
            renderProducts();
        }

        function addToCart(productId) {
            try {
                const existing = cart.find(item => item.id === productId);
                if (existing) {
                    existing.quantity++;
                } else {
                    if (products[productId]) {
                        cart.push({ id: productId, quantity: 1 });
                    } else {
                        console.error('Product not found:', productId);
                    }
                }
                updateCartCount();
                alert('Added to cart!');
            } catch (error) {
                console.error('Error in addToCart:', error);
            }
        }

        function removeFromCart(productId) {
            cart = cart.filter(item => item.id !== productId);
            updateCartCount();
            showCart();
        }

        function updateCartCount() {
            const count = cart.reduce((sum, item) => sum + item.quantity, 0);
            document.getElementById('cart-count').textContent = count;
        }

        function showProducts() {
            document.getElementById('products-page').style.display = 'block';
            document.getElementById('cart-page').style.display = 'none';
            document.getElementById('success-page').style.display = 'none';
            document.getElementById('products-tab').classList.add('active');
            document.getElementById('cart-tab').classList.remove('active');
        }

        function showCart() {
            document.getElementById('products-page').style.display = 'none';
            document.getElementById('cart-page').style.display = 'block';
            document.getElementById('success-page').style.display = 'none';
            document.getElementById('products-tab').classList.remove('active');
            document.getElementById('cart-tab').classList.add('active');
            renderCart();
        }

        function showSuccess() {
            document.getElementById('products-page').style.display = 'none';
            document.getElementById('cart-page').style.display = 'none';
            document.getElementById('success-page').style.display = 'block';
            document.getElementById('products-tab').classList.remove('active');
            document.getElementById('cart-tab').classList.remove('active');
            renderSuccessPage();
        }

        function renderCart() {
            const cartItems = document.getElementById('cart-items');
            const cartSummary = document.getElementById('cart-summary');
            
            if (cart.length === 0) {
                cartItems.innerHTML = '<div class="empty-cart">Your cart is empty</div>';
                cartSummary.innerHTML = '';
                return;
            }

            let itemsHtml = '';
            let total = 0;
            
            cart.forEach(item => {
                const product = products[item.id];
                const itemTotal = product.price * item.quantity;
                total += itemTotal;
                
                itemsHtml += `
                    <div class="cart-item">
                        <div>
                            <h3>${product.name}</h3>
                            <div>Category: ${product.category} | Qty: ${item.quantity}</div>
                            <div>Rating: ★ ${product.rating}</div>
                        </div>
                        <div>
                            <div class="price">$${itemTotal}</div>
                            <button onclick="removeFromCart('${item.id}')" style="background: #dc3545; color: white; border: none; padding: 5px 10px; border-radius: 4px; cursor: pointer;">Remove</button>
                        </div>
                    </div>
                `;
            });

            cartItems.innerHTML = itemsHtml;
            
            cartSummary.innerHTML = `
                <h2>Order Summary</h2>
                <div style="margin: 10px 0;">
                    <div>Subtotal: $${total}</div>
                    <div>Shipping: FREE</div>
                    <hr style="margin: 10px 0;">
                    <div style="font-weight: bold; font-size: 18px; color: #b12704;">Total: $${total}</div>
                </div>
                <button class="checkout-btn" onclick="proceedToCheckout()">Proceed to Checkout</button>
            `;
        }

        function proceedToCheckout() {
            lastOrder.items = [...cart];
            let total = 0;
            cart.forEach(item => {
                const product = products[item.id];
                total += product.price * item.quantity;
            });
            
            lastOrder.total = total;
            cart = [];
            updateCartCount();
            showSuccess();
        }

        function renderSuccessPage() {
            const orderItems = document.getElementById('order-items');
            const totalPaid = document.getElementById('total-paid');
            
            let itemsHtml = '';
            lastOrder.items.forEach(item => {
                const product = products[item.id];
                const itemTotal = product.price * item.quantity;
                itemsHtml += `
                    <div class="order-item">
                        <span>${product.name} (Qty: ${item.quantity})</span>
                        <span>$${itemTotal}</span>
                    </div>
                `;
            });
            
            orderItems.innerHTML = itemsHtml;
            totalPaid.textContent = `$${lastOrder.total}`;
        }

        function continueShopping() {
            currentFilter = 'featured';
            showProducts();
            renderProducts();
        }

        // Initialize Alpine.js dropdown
        document.addEventListener('alpine:init', () => {
            Alpine.data('dropdown', () => ({
                isOpen: false,
                activeSubmenu: null,
                activeSubmenuL3: null,
                selectedText: null,
                menu: [
                    {
                        label: 'Men',
                        children: [
                            {
                                label: 'Shoes',
                                children: [
                                    { label: 'Nike', value: 'nike' },
                                    { label: 'Adidas', value: 'adidas' }
                                ]
                            },
                            {
                                label: 'Clothing',
                                children: [
                                    { label: 'T-Shirts', value: 'tshirts' },
                                    { label: 'Jeans', value: 'jeans' }
                                ]
                            }
                        ]
                    },
                    {
                        label: 'Women',
                        children: [
                            {
                                label: 'Shoes',
                                children: [
                                    { label: 'Nike', value: 'nike' },
                                    { label: 'Adidas', value: 'adidas' }
                                ]
                            },
                            {
                                label: 'Electronics',
                                children: [
                                    { label: 'Headphones', value: 'headphones' },
                                    { label: 'Smartwatch', value: 'smartwatch' }
                                ]
                            }
                        ]
                    },
                    {
                        label: 'Home',
                        children: [
                            {
                                label: 'Plants',
                                children: [{ label: 'Plants', value: 'plants' }]
                            },
                            {
                                label: 'Candles',
                                children: [{ label: 'Candles', value: 'candles' }]
                            }
                        ]
                    }
                ],
                toggleDropdown() {
                    this.isOpen = !this.isOpen;
                    console.log('Toggling dropdown, isOpen:', this.isOpen); // Debug
                    if (!this.isOpen) {
                        this.activeSubmenu = null;
                        this.activeSubmenuL3 = null;
                    }
                },
                closeDropdown() {
                    this.isOpen = false;
                    this.activeSubmenu = null;
                    this.activeSubmenuL3 = null;
                    console.log('Closing dropdown'); // Debug
                },
                toggleSubmenu(label) {
                    this.activeSubmenu = this.activeSubmenu === label ? null : label;
                    this.activeSubmenuL3 = null; // Close L3 when toggling L2
                    console.log('Toggling submenu:', label, 'Active:', this.activeSubmenu); // Debug
                },
                toggleSubmenuL3(label, event) {
                    event.stopPropagation();
                    this.activeSubmenuL3 = this.activeSubmenuL3 === label ? null : label;
                    console.log('Toggling L3 submenu:', label, 'Active:', this.activeSubmenuL3); // Debug
                },
                selectItem(gender, subcategory, brand, displayText, event) {
                    event.stopPropagation();
                    this.selectedText = displayText;
                    this.isOpen = false;
                    this.activeSubmenu = null;
                    this.activeSubmenuL3 = null;
                    console.log('Selected:', gender, subcategory, brand, displayText); // Debug
                    const event2 = new CustomEvent('selectionChange', {
                        detail: { gender, subcategory, brand, displayText }
                    });
                    document.dispatchEvent(event2);
                }
            }));
        });

        // Listen for dropdown selections
        document.addEventListener('selectionChange', (e) => {
            console.log('Selection change event:', e.detail); // Debug
            const { gender, subcategory, brand } = e.detail;
            filterProducts(gender.toLowerCase(), subcategory.toLowerCase(), brand.toLowerCase());
        });

        // Initialize the page
        renderProducts();
    </script>


</body></html>